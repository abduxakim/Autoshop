from aiogram.types import (ReplyKeyboardMarkup , KeyboardButton , KeyboardButtonPollType,
                            InlineKeyboardMarkup, InlineKeyboardButton)
#from aiogram.types import  KeyboardButtonPollType for enchanced version 
#BUILDER
from aiogram.utils.keyboard import InlineKeyboardBuilder,ReplyKeyboardBuilder
from database.admin_db.categories_db import get_categories
from database.admin_db.car_brands_db import    get_car_brands
from keyboards.admin_kb.admin_kb import back_button  


# –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (–æ—Ç—Å—é–¥–∞ ‚Äî –≤ —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å)
def get_category_action_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
             [
                KeyboardButton(text="üìÇ –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤"),
                KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"),
            ],
            [back_button()]  # –≤–∏–¥–∏–º–∞—è –∫–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥
        ],
        resize_keyboard=True
    )


# –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–µ—Ä–µ–∑ inline
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (choose | delete | update)
def build_categories_kb(action="choose", lang="ru"):
    """
    action: choose | delete | update | manage
    choose  -> –ø—Ä–æ—Å—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–¥–ª—è –≤—ã–±–æ—Ä–∞)
    manage  -> —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π + –∫–Ω–æ–ø–∫–∏ ‚úè –∏ üóë —Å–ø—Ä–∞–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–π
    delete  -> —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø–æ –∫–ª–∏–∫—É —É–¥–∞–ª—è–µ–º)
    update  -> —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø–æ –∫–ª–∏–∫—É –æ–±–Ω–æ–≤–ª—è–µ–º)
    """
    categories = get_categories()
    if not categories:
        return InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="‚ùå –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π", callback_data="noop")]]
        )

    keyboard = []

    if action == "manage":
        # üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è + ‚úè –∏ üóë –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        for cat in categories:
            text = cat.get(f"name_{lang}", cat["name_ru"])
            keyboard.append([
                InlineKeyboardButton(text=f"üìÇ {text}", callback_data="noop"),
                InlineKeyboardButton(text="‚úè", callback_data=f"update_cat:{cat['id']}"),
                InlineKeyboardButton(text="üóë", callback_data=f"delete_cat:{cat['id']}")
            ])
    else:
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∂–∏–º—ã ‚Äî –∫–æ–º–ø–∞–∫—Ç–Ω–æ –ø–æ 2 –≤ —Ä—è–¥
        row = []
        for i, cat in enumerate(categories, start=1):
            text = cat.get(f"name_{lang}", cat["name_ru"])

            if action == "choose":
                row.append(InlineKeyboardButton(text=text, callback_data=f"choose_cat:{cat['id']}"))
            elif action == "delete":
                row.append(InlineKeyboardButton(text=text, callback_data=f"delete_cat:{cat['id']}"))
            elif action == "update":
                row.append(InlineKeyboardButton(text=text, callback_data=f"update_cat:{cat['id']}"))

            if i % 2 == 0:
                keyboard.append(row)
                row = []
        if row:
            keyboard.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º "–ù–∞–∑–∞–¥" –∏–ª–∏ "–û—Ç–º–µ–Ω–∞"
    if action == "choose":
        keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back:categories")])
    else:
        keyboard.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_{action}")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_post_delete_kb(lang="ru"):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:
    –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ '–û—Ç–º–µ–Ω–∞',
    –¥–æ–±–∞–≤–ª—è–µ—Ç '–ù–∞–∑–∞–¥', –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç.
    """
    categories = get_categories()
    if not categories:
        return None

    keyboard = []
    for cat in categories:
        text = cat.get(f"name_{lang}", cat["name_ru"])
        keyboard.append([InlineKeyboardButton(text=text, callback_data=f"delete_cat:{cat['id']}")])

    keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back:categories")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_confirm_delete_kb(cat_id: int, lang="ru"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete:{cat_id}"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete")
            ]
        ]
    )






#–í—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def update_category_choose_lang_kb():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="update_lang:ru"),
                InlineKeyboardButton(text="üá¨üáß English", callback_data="update_lang:en"),
                InlineKeyboardButton(text="üá∫üáø O‚Äòzbek", callback_data="update_lang:uz"),
            ],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_update")]
        ]
    )