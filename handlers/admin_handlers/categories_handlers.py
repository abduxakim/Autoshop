# handlers/admin_handlers/categories_handlers.py

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import StateFilter

# --- –ò–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä ---
from keyboards.admin_kb.admin_kb import get_admin_main_menu
from keyboards.admin_kb.categories_kb import (
    build_categories_kb,
    update_category_choose_lang_kb,
    get_category_action_kb,
    get_post_delete_kb,
    get_confirm_delete_kb
)
from keyboards.admin_kb.car_brands_kb import get_car_brands_action_kb

# --- –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π ---
from database.admin_db.categories_db import (
    add_category,
    get_categories,
    delete_category,
    update_category_field,
)

# --- –ò–º–ø–æ—Ä—Ç –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ---
from handlers.admin_handlers.admin_main_handlers import BACK_STACKS


# -------------------------------------------------
#   Router –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
# -------------------------------------------------
admin_categories_router = Router()


# -------------------------------------------------
#   FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
# -------------------------------------------------
class AddCategory(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ—ç—Ç–∞–ø–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    name_ru = State()
    name_en = State()
    name_uz = State()


# =================================================
#   –ü–û–ö–ê–ó–ê–¢–¨ –ö–ê–¢–ï–ì–û–†–ò–ò
# =================================================
@admin_categories_router.message(F.text == "üìÇ –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤")
async def show_all_categories(message: Message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (Update/Delete)
    """
    user_id = message.from_user.id
    BACK_STACKS[user_id].append("action_categories")

    await message.answer(
        "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π üìÇ",
        reply_markup=build_categories_kb(action="manage", lang="ru")
    )


@admin_categories_router.callback_query(F.data.startswith("choose_cat:"))
async def choose_car_brand(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è.
    """
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ FSM ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if await state.get_state() is not None:
        await callback.answer()
        return

    category_id = int(callback.data.split(":")[1])
    user_id = callback.from_user.id
    BACK_STACKS[user_id].append("categories")

    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è üöò:",
        reply_markup=get_car_brands_action_kb()
    )
    await callback.answer()





# =================================================
#   –î–û–ë–ê–í–ò–¢–¨ –ö–ê–¢–ï–ì–û–†–ò–Æ 
# =================================================
#–î–õ–Ø –ù–ï–ì–û –û–¢–ú–ï–ù–ê –†–ê–ë–û–¢–ê–ï–¢ –ß–ï–†–ï–ó @admin_main_router.callback_query(F.data.startswith("back:"))async def go_back_inline
@admin_categories_router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
async def add_category_start(message: Message, state: FSMContext):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"""
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º üá∑üá∫:")
    await state.set_state(AddCategory.name_ru)


@admin_categories_router.message(AddCategory.name_ru)
async def add_category_ru(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"""
    await state.update_data(name_ru=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º üá¨üáß (–∏–ª–∏ '-' –µ—Å–ª–∏ –Ω–µ—Ç):")
    await state.set_state(AddCategory.name_en)


@admin_categories_router.message(AddCategory.name_en)
async def add_category_en(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"""
    name_en = None if message.text.strip() == "-" else message.text.strip()
    await state.update_data(name_en=name_en)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º üá∫üáø (–∏–ª–∏ '-' –µ—Å–ª–∏ –Ω–µ—Ç):")
    await state.set_state(AddCategory.name_uz)


@admin_categories_router.message(AddCategory.name_uz)
async def add_category_uz(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º —É–∑–±–µ–∫—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –ë–î"""
    name_uz = None if message.text.strip() == "-" else message.text.strip()
    data = await state.get_data()

    name_ru = data["name_ru"]
    name_en = data["name_en"]

    add_category(name_ru, name_en, name_uz)

    await message.answer(
        f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞:\n\n"
        f"üá∑üá∫ {name_ru}\n"
        f"üá¨üáß {name_en or '‚Äî'}\n"
        f"üá∫üáø {name_uz or '‚Äî'}",
        reply_markup=get_admin_main_menu()
    )
    await state.clear()


# =================================================
#   –£–î–ê–õ–ò–¢–¨ –ö–ê–¢–ï–ì–û–†–ò–Æ
# =================================================
"""@admin_categories_router.message(F.text == "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
async def delete_category_handler(message: Message, state: FSMContext):
    ""–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è""
    kb = build_categories_kb(action="delete")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=kb)"""


# –ù–∞–∂–∞–ª–∏ –Ω–∞ üóë ‚Äî —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
@admin_categories_router.callback_query(F.data.startswith("delete_cat:"))
async def confirm_delete_category(callback: CallbackQuery):
    cat_id = int(callback.data.split(":")[1])
    categories = get_categories()
    category = next((c for c in categories if c["id"] == cat_id), None)

    if not category:
        await callback.answer("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)
        return

    await callback.message.edit_text(
        f"‚ùó –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é <b>{category['name_ru']}</b>?",
        reply_markup=get_confirm_delete_kb(cat_id),
        parse_mode="HTML"
    )


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
@admin_categories_router.callback_query(F.data.startswith("confirm_delete:"))
async def process_delete_category(callback: CallbackQuery):
    cat_id = int(callback.data.split(":")[1])
    categories = get_categories()
    category = next((c for c in categories if c["id"] == cat_id), None)

    if not category:
        await callback.answer("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)
        return

    # –£–¥–∞–ª—è–µ–º
    delete_category(category["id"], category["name_ru"])

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    keyboard = get_post_delete_kb()

    if not keyboard:
        await callback.message.edit_text("‚úÖ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–¥–∞–ª–µ–Ω—ã.")
    else:
        await callback.message.edit_text(
            f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è <b>{category['name_ru']}</b> —É–¥–∞–ª–µ–Ω–∞.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=keyboard,
            parse_mode="HTML"
        )



# =================================================
#   –û–ë–ù–û–í–ò–¢–¨ –ö–ê–¢–ï–ì–û–†–ò–Æ
# =================================================
@admin_categories_router.message(F.text == "‚ôªÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
async def process_update_category(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    kb = build_categories_kb(action="update")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", reply_markup=kb)


@admin_categories_router.callback_query(F.data.startswith("update_cat:"))
async def update_category_choose_lang(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä —è–∑—ã–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    category_id = int(callback.data.split(":")[1])
    await state.update_data(category_id=category_id)

    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å:",
        reply_markup=update_category_choose_lang_kb()
    )
    await callback.answer()


@admin_categories_router.callback_query(F.data.startswith("update_lang:"))
async def update_category_wait_name(callback: CallbackQuery, state: FSMContext):
    """–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –æ–∂–∏–¥–∞–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    lang = callback.data.split(":")[1]
    await state.update_data(update_lang=lang)

    lang_names = {"ru": "—Ä—É—Å—Å–∫–∏–π", "en": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "uz": "—É–∑–±–µ–∫—Å–∫–∏–π"}
    await callback.message.answer(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({lang_names[lang]}):")

    await state.set_state("update_category_name")
    await callback.answer()


@admin_categories_router.message(StateFilter("update_category_name"))
async def save_updated_category(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    data = await state.get_data()
    category_id = data.get("category_id")
    lang = data.get("update_lang")
    new_name = message.text.strip()

    if not new_name:
        await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return

    success = update_category_field(category_id, lang, new_name)

    if success:
        await message.answer(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {lang.upper()}: {new_name}")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    await state.clear()


# =================================================
#   –û–¢–ú–ï–ù–ê –õ–Æ–ë–û–ì–û –î–ï–ô–°–¢–í–ò–Ø 
# =================================================

@admin_categories_router.callback_query(F.data.startswith("cancel_"))
async def cancel_any_action(callback: CallbackQuery, state: FSMContext):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:
    cancel_delete, cancel_update, cancel_manage –∏ —Ç.–¥.
    """
    # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–µ—Å–ª–∏ –±—ã–ª FSM)
    await state.clear()

    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.delete()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    await callback.message.answer(
        "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=get_category_action_kb()
    )

    await callback.answer()
