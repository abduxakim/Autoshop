from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.admin_kb.car_brands_kb import get_car_brands_kb
from keyboards.admin_kb.admin_kb import get_admin_main_menu

from database.admin_db.car_brands_db import add_car_brands

from handlers.admin_handlers.admin_main_handlers import BACK_STACKS



admin_car_brands_router = Router()



class AddCarBrands(StatesGroup):
    name = State()

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -> —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ —Ö–æ—Ç–∏–º –ø–æ–ø–∞—Å—Ç—å –≤ "action"
@admin_car_brands_router.message(F.text == "üìÇ –ü–æ–∫–∞–∑–∞—Ç—å –±—Ä–µ–Ω–¥—ã –∞–≤—Ç–æ")
async def show_all_categories(message: Message):
    user = message.from_user.id
    BACK_STACKS[user].append("actaction_categoriesion")   # parent of categories = action
    await message.answer("–í–æ—Ç —Å–ø–∏—Å–æ–∫ –±—Ä–µ–Ω–¥–æ–≤ –∞–≤—Ç–æ  üìÇ", reply_markup=get_car_brands_kb("name"))


# 1. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞
@admin_car_brands_router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –±—Ä–µ–Ω–¥ –∞–≤—Ç–æ")
async def add_car_brands_handler(message:Message,state:FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ")
    await state.set_state(AddCarBrands.name)

# 2. –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
@admin_car_brands_router.message(AddCarBrands.name)
async def save_car_brands_name(message: Message, state: FSMContext):
    name = message.text.strip()

    if not name or name == "-":
        await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return

    add_car_brands(name)

    await message.answer(
        f"‚úÖ –ë—Ä–µ–Ω–¥ –∞–≤—Ç–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:\n\n"
        f"üöó {name}",
        reply_markup=get_admin_main_menu()
    )
    await state.clear()








